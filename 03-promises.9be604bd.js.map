{"mappings":"YAAA,MAAMA,EAAOC,SAASC,cAAc,SAC9BC,EAAYF,SAASG,eAAe,UAE1C,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACvBL,EACFM,YAAW,KACTF,EAAQ,C,SAAEN,E,MAAUC,GAAQ,GAC3BA,GAEHM,EAAO,C,SAAEP,E,MAAUC,GAAQ,G,CAmCjCP,EAAKe,iBAAiB,UA9BtB,SAAsBC,GACpBA,EAAMC,iBAEN,MAAMC,EAAajB,SAASC,cAAc,uBACpCiB,EAAYlB,SAASC,cAAc,sBACnCkB,EAAcnB,SAASC,cAAc,wBAErCmB,EAAaC,SAASJ,EAAWK,OACjCC,EAAYF,SAASH,EAAUI,OAC/BE,EAASH,SAASF,EAAYG,OAEpCpB,EAAUuB,UAAY,GAEtB,IAAK,IAAIC,EAAI,EAAGA,GAAKF,EAAQE,IAAK,CAGhCtB,EAAcsB,EAFAN,GAAcM,EAAI,GAAKH,GAGlCI,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjB,MAAMsB,EAAU,uBAAqBvB,QAAiBC,UACpDJ,EAAQuB,WAAaG,CAAO,IAE/BC,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClB,MAAMsB,EAAU,sBAAoBvB,QAAeC,UACnDJ,EAAUuB,WAAaG,CAAO,G,CAIpC7B,EAAK+B,O","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\nconst outputDiv = document.getElementById('output');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      setTimeout(() => {\n        resolve({ position, delay });\n      }, delay);\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const delayInput = document.querySelector('input[name=\"delay\"]');\n  const stepInput = document.querySelector('input[name=\"step\"]');\n  const amountInput = document.querySelector('input[name=\"amount\"]');\n\n  const firstDelay = parseInt(delayInput.value);\n  const delayStep = parseInt(stepInput.value);\n  const amount = parseInt(amountInput.value);\n\n  outputDiv.innerHTML = ''; // Limpiar el contenido anterior\n\n  for (let i = 1; i <= amount; i++) {\n    const delay = firstDelay + (i - 1) * delayStep;\n\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        const message = `✅ Fulfilled promise ${position} in ${delay}ms<br>`;\n        outputDiv.innerHTML += message;\n      })\n      .catch(({ position, delay }) => {\n        const message = `❌ Rejected promise ${position} in ${delay}ms<br>`;\n        outputDiv.innerHTML += message;\n      });\n  }\n\n  form.reset();\n}\n\nform.addEventListener('submit', handleSubmit);\n"],"names":["$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$outputDiv","getElementById","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delayInput","stepInput","amountInput","firstDelay","parseInt","value","delayStep","amount","innerHTML","i","then","message","catch","reset"],"version":3,"file":"03-promises.9be604bd.js.map"}